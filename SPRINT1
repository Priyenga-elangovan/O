{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b66f8ee2-f25d-4d65-8590-6766d9a30a62",
   "metadata": {},
   "source": [
    "# IBM Project Name: Real-Time Communication System Powered by AI for Specially Abled\n",
    "# TEAM ID: PNT2022TMID01161\n",
    "# TEAM Lead:SHANMUGASRI SN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3f5c494-0987-4fda-a019-2123fbc1f76f",
   "metadata": {},
   "source": [
    "# --------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfc3aaec-403e-4707-bea4-88a936c07c13",
   "metadata": {},
   "source": [
    "# IMPORTING NECESSARY LIBRARIES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d8b7dccb-12a3-4591-ba10-00cb2e18f6eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import cv2\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from keras.preprocessing.image import ImageDataGenerator\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ddc12e5-6dbd-438d-a565-a368daf0f440",
   "metadata": {},
   "source": [
    "# RENAMING DATA FILES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a057c0cd-7340-467c-b464-435eba01b16f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def rename_imgs(file_name):\n",
    "    folder_path = r'test_dataset/'+file_name\n",
    "\n",
    "    num = 0\n",
    "    for file in os.listdir(folder_path):\n",
    "        # if num%10 == 0:\n",
    "        #     print(f'Renamed {num} files...')\n",
    "        # os.rename(folder_path+'\\\\'+file, folder_path+'\\\\'+file_name+'_'+str(num)+'.jpeg')\n",
    "        num += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "97434a11-3138-467f-b2a9-a2813247360f",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[WinError 3] The system cannot find the path specified: 'test_dataset/Space'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn [3], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m fn \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mSpace\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m----> 2\u001b[0m \u001b[43mrename_imgs\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfn\u001b[49m\u001b[43m)\u001b[49m\n",
      "Cell \u001b[1;32mIn [2], line 5\u001b[0m, in \u001b[0;36mrename_imgs\u001b[1;34m(file_name)\u001b[0m\n\u001b[0;32m      2\u001b[0m folder_path \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mr\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtest_dataset/\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;241m+\u001b[39mfile_name\n\u001b[0;32m      4\u001b[0m num \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n\u001b[1;32m----> 5\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m file \u001b[38;5;129;01min\u001b[39;00m \u001b[43mos\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlistdir\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfolder_path\u001b[49m\u001b[43m)\u001b[49m:\n\u001b[0;32m      6\u001b[0m     \u001b[38;5;66;03m# if num%10 == 0:\u001b[39;00m\n\u001b[0;32m      7\u001b[0m     \u001b[38;5;66;03m#     print(f'Renamed {num} files...')\u001b[39;00m\n\u001b[0;32m      8\u001b[0m     \u001b[38;5;66;03m# os.rename(folder_path+'\\\\'+file, folder_path+'\\\\'+file_name+'_'+str(num)+'.jpeg')\u001b[39;00m\n\u001b[0;32m      9\u001b[0m     num \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [WinError 3] The system cannot find the path specified: 'test_dataset/Space'"
     ]
    }
   ],
   "source": [
    "fn = 'Space'\n",
    "rename_imgs(fn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bd9f239f-7066-446b-bb86-2bc92a9da5f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_names = '0123456789'+'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n",
    "for fn in file_names:\n",
    "    rename_imgs(fn)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab181e9e-0336-4b68-b5e0-117a42b611ab",
   "metadata": {},
   "source": [
    "# DISPLAYING SAMPLE IMAGES FROM DATASET"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0e286070-ebc9-403e-8acd-13eefd475a23",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data_path = 'train_dataset/'\n",
    "test_data_path = 'test_dataset/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d14bc5c-6963-4218-ba58-f4328d240721",
   "metadata": {},
   "outputs": [],
   "source": [
    "def display(img,sign=None):\n",
    "    \n",
    "    img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)\n",
    "    fig = plt.figure(figsize=(7,7))\n",
    "    ax = fig.add_subplot(111)\n",
    "    plt.title(sign)\n",
    "    ax.imshow(img)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9b91f41-d0c2-43f5-abe8-c1e0c36ecfce",
   "metadata": {},
   "source": [
    "## Training Data Images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eeaf70e4-2454-4393-97ea-6bb35309b5be",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(train_data_path+'O/O_234.jpeg')\n",
    "display(sign_img,'a')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12658eae-ac01-48a1-8a4c-86c08687348f",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(train_data_path+'A/A_204.jpeg')\n",
    "display(sign_img,'A')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5f21eeb6-5376-41ce-8cd6-78120a378ff1",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(train_data_path+'3/3_340.jpeg')\n",
    "display(sign_img,'3')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3d8d2300-afde-4b15-bc00-61aa673f939e",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(train_data_path+'M/M_100.jpeg')\n",
    "display(sign_img,'M')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "499e28ad-7e5b-43b1-bcd1-1aee090918a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(train_data_path+'S/S_10.jpeg')\n",
    "display(sign_img,'Space')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a01aab8-bbd8-49b8-bf30-ff2d5142ff29",
   "metadata": {},
   "source": [
    "## Test Data Images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9594a3e3-94ef-4203-b055-fdd0429e4801",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(test_data_path+'S/S_15.jpeg')\n",
    "display(sign_img,'S')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "290bca03-bbd9-4349-af01-d0fd0dc5509c",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(test_data_path+'Z/Z_1.jpeg')\n",
    "display(sign_img,'Z')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a2bd056-c960-4116-bf65-5520794a42aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "sign_img = cv2.imread(test_data_path+'7/7_8.jpeg')\n",
    "display(sign_img,'7')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "586a11cb-5725-4f7c-b579-d06bbeb4e416",
   "metadata": {
    "tags": []
   },
   "source": [
    "# AUGMENTATION AND PREPROCESSING THE DATASET"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce9985de-2072-4d36-a0cf-97e31afe45a8",
   "metadata": {},
   "source": [
    "## Creating ImageDataGenerator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c306a178-7714-49ab-b591-58fba2bf6bae",
   "metadata": {},
   "outputs": [],
   "source": [
    "image_gen = ImageDataGenerator(rotation_range=30,\n",
    "                              width_shift_range=0.1,\n",
    "                              height_shift_range=0.1,\n",
    "                              shear_range=0.2,\n",
    "                              zoom_range=0.2,\n",
    "                              rescale=1/255,\n",
    "                              horizontal_flip=True,\n",
    "                              fill_mode='nearest',\n",
    "                              validation_split=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d15b2c94-98ea-408b-9de9-9a026e6f87ab",
   "metadata": {
    "tags": []
   },
   "source": [
    "## Original Image"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1fd400e6-08ce-4013-8cfe-c67e6073a6d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sign_img = cv2.imread(train_data_path+'3/3_100.jpeg')\n",
    "display(sign_img,'3')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e41ea9c4-6c0a-43c3-a78b-eaf38512c20e",
   "metadata": {},
   "source": [
    "## Augmented Images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "0b4773b3-c885-47b9-b107-1b0689a3c6f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(image_gen.random_transform(sign_img))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "30396193-fa31-4bbd-b7f5-11f020d6712d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(image_gen.random_transform(sign_img))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af428e42-8dc1-43bc-9579-0df6d56624a3",
   "metadata": {},
   "source": [
    "# SPLITING INTO TRAIN AND VALIDATION DATASET"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8b174a3-65be-4049-a0c3-97eb90ef68ff",
   "metadata": {},
   "source": [
    "## Train Data Generator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b5959116-ee69-40a3-8103-b94f9bde8032",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 41625 images belonging to 37 classes.\n"
     ]
    }
   ],
   "source": [
    "train_data_gen = image_gen.flow_from_directory(train_data_path,\n",
    "                                           target_size=(250,250),\n",
    "                                           batch_size=16,\n",
    "                                           shuffle=True,\n",
    "                                           class_mode='binary',\n",
    "                                           subset='training')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3042ba0-ad1a-4ca2-b730-494d5bcd803e",
   "metadata": {},
   "source": [
    "## Validation Data Generator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "12364630-7b90-4878-8487-be00dfcaa313",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 13875 images belonging to 37 classes.\n"
     ]
    }
   ],
   "source": [
    "validation_data_gen = image_gen.flow_from_directory(train_data_path,\n",
    "                                           target_size=(250,250),\n",
    "                                           batch_size=16,\n",
    "                                           shuffle=True,\n",
    "                                           class_mode='binary',\n",
    "                                           subset='validation')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45b8d3ae-4fe9-4eba-a03b-02765e57d0f6",
   "metadata": {},
   "source": [
    "## Test Data Generator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fda073d6-e879-4a39-9eb6-9efb846496e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 2586 images belonging to 37 classes.\n"
     ]
    }
   ],
   "source": [
    "test_data_gen = image_gen.flow_from_directory(test_data_path,\n",
    "                                           target_size=(250,250),\n",
    "                                           batch_size=8,\n",
    "                                           shuffle=True,\n",
    "                                           class_mode='categorical',\n",
    "                                           )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "16b9020a-814e-49bc-a3ca-665cacd8ce10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'0': 0,\n",
       " '1': 1,\n",
       " '2': 2,\n",
       " '3': 3,\n",
       " '4': 4,\n",
       " '5': 5,\n",
       " '6': 6,\n",
       " '7': 7,\n",
       " '8': 8,\n",
       " '9': 9,\n",
       " 'A': 10,\n",
       " 'B': 11,\n",
       " 'C': 12,\n",
       " 'D': 13,\n",
       " 'E': 14,\n",
       " 'F': 15,\n",
       " 'G': 16,\n",
       " 'H': 17,\n",
       " 'I': 18,\n",
       " 'J': 19,\n",
       " 'K': 20,\n",
       " 'L': 21,\n",
       " 'M': 22,\n",
       " 'N': 23,\n",
       " 'O': 24,\n",
       " 'P': 25,\n",
       " 'Q': 26,\n",
       " 'R': 27,\n",
       " 'S': 28,\n",
       " 'Space': 29,\n",
       " 'T': 30,\n",
       " 'U': 31,\n",
       " 'V': 32,\n",
       " 'W': 33,\n",
       " 'X': 34,\n",
       " 'Y': 35,\n",
       " 'Z': 36}"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data_gen.class_indices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "f49b1bcb-38ac-4185-96d4-c3f96def8eaa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0,  0,  0, ..., 36, 36, 36])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data_gen.classes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "9f8a991a-ab15-491c-9759-a39d78f15ac1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "41625"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(train_data_gen.classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "9bdb5c54-3e88-480b-ae40-125a2eb709c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2586"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(test_data_gen.classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "47432de4-3739-4c94-a678-a120ba3f0b5c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
